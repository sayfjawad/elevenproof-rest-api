plugins {
    id 'java'
    id 'org.openapi.generator' version '6.2.1' // Ensure to check for the latest version
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.swagger:swagger-annotations:1.6.4' // Adjust version as needed
    implementation 'com.squareup.okhttp3:okhttp:4.9.3' // Add OkHttp dependency
    implementation 'com.squareup.okio:okio:2.10.0' // Add Okio dependency
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3' // Add OkHttp logging interceptor
    implementation 'io.gsonfire:gson-fire:1.8.5' // Add GsonFire dependency
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1' // Add JAX-RS dependency
    implementation 'javax.annotation:javax.annotation-api:1.3.2' // Add javax.annotation-api dependency
    implementation 'org.jetbrains:annotations:24.0.1' // Add JetBrains annotations dependency
}

// Ensure the generated sources are compiled
sourceSets.main.java.srcDir "${projectDir}/build/generated/src/main/java"

// Ensure the clean task deletes the generated files
clean {
    delete "${projectDir}/build/generated"
}

// Define the generateOpenApi task
task generateOpenApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "java"
    inputSpec = "${projectDir}/src/main/resources/apispecs/api-specs.yaml"
    outputDir = "${projectDir}/build/generated"
    apiPackage = "com.example.api"
    modelPackage = "com.example.model"
    configOptions = [
            dateLibrary: "java8"
    ]
}

// Ensure the openApiGenerate task runs before compileJava
compileJava.dependsOn generateOpenApi

// Ensure the openApiGenerate task runs before classes
classes.dependsOn generateOpenApi

// Ensure the generateOpenApi task runs after clean
generateOpenApi.mustRunAfter clean
